---
// src/components/BlogCard.astro
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';

export interface Props {
  post: CollectionEntry<'blog'>; // Expects a full blog post entry from your content collection
}
const { post } = Astro.props;
const { data: frontmatter, slug } = post; // Destructure frontmatter and slug from the entry

// Format the publishDate for display
const formattedDate = frontmatter.publishDate.toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
});

// Get heroImage and alt text from frontmatter
const heroImageSrc = frontmatter.heroImage; // This will be ImageMetadata if from src/assets, or string if public path
const heroImageAltText = frontmatter.heroImageAlt || `Cover image for ${frontmatter.title}`;
---
<article class="blog-card">
  {heroImageSrc && (
    <a href={`/blog/${slug}/`} class="card-image-link" aria-hidden="true" tabindex="-1">
      <div class="card-image-wrapper">
        <Image 
          src={heroImageSrc} 
          alt={heroImageAltText}
          class="card-image"
          widths={[200, 400, 600]} 
          sizes="(max-width: 600px) 100vw, (max-width: 992px) 50vw, 33vw" 
          format="webp"
          quality={75}
          loading="lazy"
          decoding="async"
        />
      </div>
    </a>
  )}
  <div class="card-content">
    <h2 class="card-title">
      <a href={`/blog/${slug}/`}>{frontmatter.title}</a>
    </h2>
    <div class="card-meta">
      <time datetime={frontmatter.publishDate.toISOString()} class="publish-date">{formattedDate}</time>
      {frontmatter.author && <span class="author">by {frontmatter.author}</span>}
    </div>
    {frontmatter.description && (
      <p class="card-excerpt">{frontmatter.description}</p>
    )}
    {frontmatter.tags && frontmatter.tags.length > 0 && (
      <div class="card-tags">
        {/* Show first 2-3 tags for brevity on the card */}
        {frontmatter.tags.slice(0, 3).map((tag: string) => <span class="tag">{tag}</span>)} 
      </div>
    )}
    <a href={`/blog/${slug}/`} class="read-more-link">
      Read More <span class="material-symbols-outlined" style="font-size: 1em; vertical-align: middle;">arrow_forward</span>
    </a>
  </div>
</article>

<style>
  /* Ensure your global CSS (imported in BaseLayout) has your color variables */
  /* Example variables:
  :root {
    --primary-color: rgba(41, 164, 240, 0.9);
    --primary-hover: #0056b3;
    --dark-blue: #01245c;
    --text-color: #1d2951;
    --text-light: #f8f9fa;
    --light-bg: #f8f9fa;
    --secondary-color: #6c757d;
    --medium-gray: #ddd;
    --border-radius: 8px;
    --box-shadow: 0 4px 12px rgba(0,0,0,0.08);
  }
  */

  .blog-card {
    background-color: var(--light-bg, #fff);
    border-radius: var(--border-radius, 8px);
    box-shadow: var(--box-shadow, 0 4px 12px rgba(0,0,0,0.08));
    overflow: hidden;
    display: flex;
    flex-direction: column;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    height: 100%; /* For consistent height in a grid */
  }
  .blog-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 16px rgba(0,0,0,0.12);
  }

  .card-image-link {
    display: block; /* Ensures the link wraps the image correctly */
  }
  .card-image-wrapper {
    width: 100%;
    aspect-ratio: 16 / 9; 
    background-color: var(--medium-gray, #eee); 
    overflow: hidden; /* Clips the image to the wrapper's bounds */
  }
  .card-image { /* Targets the img generated by <Image /> */
    width: 100%;
    height: 100%;
    object-fit: cover; /* Cover the area, might crop image */
    transition: transform 0.4s ease;
  }
  .blog-card:hover .card-image {
    transform: scale(1.05); /* Slight zoom effect on hover */
  }

  .card-content {
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
    flex-grow: 1; /* Allows 'Read More' to be pushed to the bottom */
  }

  .card-title {
    font-size: 1.3rem; /* Slightly adjusted from previous */
    font-weight: 600;
    color: var(--dark-blue);
    margin-bottom: 0.5rem;
    line-height: 1.3;
  }
  .card-title a {
    text-decoration: none;
    color: inherit;
  }
  .card-title a:hover {
    color: var(--primary-color);
  }

  .card-meta {
    font-size: 0.8rem;
    color: var(--secondary-color);
    margin-bottom: 0.75rem;
  }
  .card-meta .author {
    margin-left: 0.75rem;
  }
  .card-meta .author::before {
    content: 'â€¢'; /* Separator */
    margin-right: 0.75rem;
  }

  .card-excerpt {
    font-size: 0.9rem;
    color: var(--text-color);
    line-height: 1.6;
    margin-bottom: 1rem;
    /* CSS for truncating text to a few lines */
    display: -webkit-box;
    -webkit-line-clamp: 3; /* Number of lines to show */
    -webkit-box-orient: vertical;  
    overflow: hidden;
    text-overflow: ellipsis;
    /* Fallback for non-webkit browsers (optional, less clean truncation) */
    /* max-height: calc(1.6em * 3); /* line-height * number of lines */
  }
  
  .card-tags {
    margin-bottom: 1rem;
    flex-wrap: wrap; /* Allow tags to wrap if many */
    display: flex; /* For gap to work */
    gap: 0.4rem;
  }
  .tag {
    display: inline-block;
    background-color: var(--medium-gray);
    color: var(--text-color); /* Or var(--secondary-color) */
    padding: 0.2rem 0.5rem;
    border-radius: var(--border-radius, 4px);
    font-size: 0.75rem;
    /* margin-right: 0.4rem; /* Replaced by gap */
    /* margin-bottom: 0.4rem; /* Replaced by gap */
  }

  .read-more-link {
    margin-top: auto; /* Pushes this link to the bottom of the card-content */
    color: var(--primary-color);
    text-decoration: none;
    font-weight: 600;
    font-size: 0.9rem;
    display: inline-flex; 
    align-items: center;
    align-self: flex-start; /* Align to the start of the cross axis */
  }
  .read-more-link:hover {
    text-decoration: underline;
    color: var(--primary-hover);
  }
  .read-more-link .material-symbols-outlined {
    margin-left: 0.25rem;
    font-size: 1.1em; /* Relative to parent link's font size */
  }
</style>
