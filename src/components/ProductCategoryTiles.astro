---
// src/components/ProductCategoryTiles.astro
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';
import categoriesData from '../data/categories.json';

interface CategoryJsonItem {
  id: string;
  name: string;
  image: string; 
  isFeatured?: boolean;
}

interface CategoryDisplayInfo extends CategoryJsonItem {
  imageMeta?: ImageMetadata;
  link: string;
}

const allCategoryImages = import.meta.glob<{ default: ImageMetadata }>(
  '/src/assets/images/categories/**/*.{jpeg,jpg,png,webp,gif,svg}',
  { eager: true }
);

const categoryImageMetaMap = new Map<string, ImageMetadata>();
for (const path in allCategoryImages) {
  categoryImageMetaMap.set(path, allCategoryImages[path].default);
}

const displayCategories: CategoryDisplayInfo[] = categoriesData.map((categoryJson: any) => {
  const category = categoryJson as CategoryJsonItem;
  let imageMeta: ImageMetadata | undefined = undefined;

  if (categoryImageMetaMap.has(category.image)) {
    imageMeta = categoryImageMetaMap.get(category.image);
  } else {
    console.warn(`[ProductCategoryTiles] Image not found for category "${category.name}" at path: ${category.image}.`);
  }

  return {
    ...category,
    imageMeta: imageMeta,
    link: `/products/category/${category.id}` 
  };
});

export interface Props {
  heading?: string;
}
const { heading = "Our Product Categories" } = Astro.props;
const categoryImageSizes = "(max-width: 499px) 90vw, (max-width: 767px) 45vw, (max-width: 991px) 30vw, 250px";
const featuredCategoryImageSizes = "(max-width: 499px) 90vw, (max-width: 767px) 90vw, (max-width: 991px) calc(50vw - 0.75rem), 500px";
---

<section class="product-categories-section">
  <div class="container">
    {heading && <h2 class="section-heading"><span>{heading}</span></h2>}
    <div class="categories-grid">
      {displayCategories.map(category => (
        <a 
          href={category.link} 
          class:list={["category-tile", { featured: category.isFeatured }]}
          title={`View ${category.name} products`}
        >
          <div class="category-image-wrapper">
            {category.imageMeta ? (
              <Image 
                src={category.imageMeta} 
                alt={`${category.name} category`}
                class="category-image"
                format="webp"
                quality={75}
                widths={category.isFeatured ? [400, 600, 800, 1000] : [200, 300, 400]}
                sizes={category.isFeatured ? featuredCategoryImageSizes : categoryImageSizes}
                loading="lazy"
                decoding="async"
              />
            ) : (
              <div class="image-placeholder"><span>{category.name ? category.name.substring(0,3) : 'N/A'}</span></div>
            )}
            <div class="category-overlay"></div>
          </div>
          <div class="category-name-wrapper"> 
            <h3 class="category-name">{category.name}</h3>
          </div>
          {category.isFeatured && <span class="featured-indicator-badge">Featured</span>}
        </a>
      ))}
      {displayCategories.length === 0 && <p class="no-categories-message">No product categories found.</p>}
    </div>
  </div>
</section>

<style>
  .product-categories-section {
    padding: 3rem 0;
    background-color: var(--light-bg); 
    box-sizing: border-box;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
    box-sizing: border-box;
  }

  .section-heading {
    text-align: center;
    font-size: 2rem; 
    color: var(--dark-blue);
    font-weight: 700;
    margin-bottom: 2.5rem; 
    position: relative;
    display: block; 
  }
  .section-heading span {
    display: inline-block; 
    position: relative;
    padding-bottom: 0.5rem; 
  }
  .section-heading span::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%); 
    width: 60px; 
    height: 4px;  
    background-color: var(--primary-color); 
  }

  .categories-grid {
    display: grid;
    gap: 1.5rem;
    grid-template-columns: repeat(2, 1fr); 
  }

  @media (min-width: 768px) {
    .categories-grid {
      grid-template-columns: repeat(4, 1fr);
    }
  }
  @media (min-width: 1200px) {
    .categories-grid {
      grid-template-columns: repeat(4, 1fr); 
    }
  }

  .category-tile {
    display: flex; 
    flex-direction: column;
    position: relative;
    border-radius: var(--border-radius, 10px); 
    overflow: hidden;
    text-decoration: none;
    box-shadow: 0 5px 15px rgba(0,0,0,0.08);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    background-color: var(--dark-gray); 
  }
  .category-tile:hover {
    transform: translateY(-6px) scale(1.02);
    box-shadow: 0 10px 25px rgba(0,0,0,0.12);
  }

  .category-tile:not(.featured) {
    aspect-ratio: 1 / 1; 
  }

  .category-tile.featured {
    aspect-ratio: 36 / 17; 
  }
  
  @media (min-width: 768px) { 
    .category-tile.featured {
      grid-column: span 2;
    }
  }
  @media (max-width: 767px) {
    .category-tile.featured {
      grid-column: span 2; 
      aspect-ratio: 16 / 7; 
    }
  }
  @media (max-width: 499px) {
    .categories-grid {
        grid-template-columns: 1fr;
    }
    .category-tile.featured, .category-tile:not(.featured) {
        grid-column: span 1; 
        aspect-ratio: 16 / 9; 
    }
  }

  .category-image-wrapper {
    width: 100%;
    height: 100%; 
    position: relative; 
    overflow: hidden; 
  }
  .category-image { 
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
    transition: transform 0.4s ease-out, filter 0.3s ease;
    filter: brightness(0.9); 
  }
  .category-tile:hover .category-image {
    transform: scale(1.1); 
    filter: brightness(1); 
  }
  .image-placeholder {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: var(--medium-gray);
    color: var(--secondary-color);
    font-weight: 600;
    font-size: 1.5rem;
  }

  .category-overlay { 
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(to top, rgba(var(--dark-blue-rgb, 1, 36, 92), 0.6) 0%, transparent 60%);
    z-index: 1; 
    opacity: 0.8;
    transition: background 0.3s ease;
    pointer-events: none; 
  }
   .category-tile:hover .category-overlay {
    background: linear-gradient(to top, rgba(var(--dark-blue-rgb, 1, 36, 92), 0.7) 0%, transparent 70%);
  }

  .category-name-wrapper {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: rgba(var(--dark-blue-rgb, 1, 36, 92), 0.8);
    padding: 0.75rem 1rem; 
    z-index: 2; 
    transition: padding 0.3s ease, background-color 0.3s ease;
    text-align: center; 
  }
  .category-tile:hover .category-name-wrapper {
    padding-bottom: 1rem; 
    background-color: rgba(var(--dark-blue-rgb, 1, 36, 92), 0.8);
  }

  .category-name {
    font-size: 1.1rem; 
    font-weight: 600;
    color: var(--text-light); 
    line-height: 1.3;
    text-shadow: none; 
    margin: 0; 
  }
  
  .category-tile.featured .category-name-wrapper {
    padding: 1rem 1.5rem;
  }
  .category-tile.featured:hover .category-name-wrapper {
    padding-bottom: 1.25rem;
  }
  .category-tile.featured .category-name {
    font-size: 1.4rem; 
  }

  .featured-indicator-badge {
    position: absolute;
    top: 0.75rem;
    right: 0.75rem;
    background-color: var(--gold-color); 
    color: var(--dark-blue);
    padding: 0.25rem 0.6rem;
    border-radius: var(--border-radius, 4px);
    font-size: 0.7rem;
    font-weight: 700;
    text-transform: uppercase;
    z-index: 3; 
  }

  .no-categories-message {
    grid-column: 1 / -1; 
    text-align: center;
    padding: 2rem;
    color: var(--secondary-color);
  }
</style>
