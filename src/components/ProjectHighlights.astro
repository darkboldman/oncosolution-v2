---
// src/components/ProjectHighlights.astro
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';

// --- IMPORTANT: Image Imports for Local Assets ---
// Replace these with actual paths to your project images within the src/ directory.
import projectImage1 from '../../src/assets/images/projects/army-banquet-welisara.jpg'; // Placeholder path for a larger image
import projectImage2 from '../../src/assets/images/projects/cinnamon-dhonveli.jpg'; // Placeholder path
import projectImage3 from '../../src/assets/images/projects/lavenro-garden-kosgama.jpg'; // Placeholder path
import projectImage4 from '../../src/assets/images/projects/nsbm-green-homagama.jpg'; // Placeholder path

interface ProjectHighlightContent {
  title: string;
  paragraph1: string;
  paragraph2?: string; // Optional second paragraph
  buttonText: string;
  buttonLink: string;
  images: {
    src: ImageMetadata; // Allow imported local images or remote URLs
    alt: string;
    isLarge?: boolean; // To differentiate styling if needed
  }[];
}

// --- Sample Content ---
// Ensure the first image is intended to be the largest if you want that effect.
const content: ProjectHighlightContent = {
  title: "Explore Our Projects",
  paragraph1: "Our portfolio showcases a commitment to cutting-edge design and seamless execution. From tailored residential systems to complex commercial installations, each project reflects our dedication to delivering high-performance lighting and automation solutions.",
  paragraph2: "We create intelligent environments for hospitality venues, banquet halls, function centres, corporate boardrooms, auditoriums, showrooms, offices, and industrial facilities. Every space we design is a reflection of our team's expertise, creativity, and passion for exceeding expectations.",
  buttonText: "View More Projects",
  buttonLink: "/projects",
  images: [
    { src: projectImage1, alt: "Main project highlight - Large", isLarge: true },
    { src: projectImage2, alt: "Secondary project highlight 1 - Small" },
    { src: projectImage3, alt: "Secondary project highlight 2 - Small" },
    { src: projectImage4, alt: "Secondary project highlight 3 - Small" }, // Added fourth image
  ]
};

const imageDisplayWidths: number[] = [320, 480, 640, 768, 960]; 
---

<section class="project-highlights-section">
  <div class="container">
    <div class="image-gallery">
      {content.images.map((image, index) => (
        <div class={`gallery-item gallery-item-${index + 1} ${image.isLarge ? 'large' : ''}`}>
          <Image
            src={image.src}
            alt={image.alt}
            widths={imageDisplayWidths}
            sizes={
              image.isLarge 
                ? "(max-width: 767px) 90vw, (max-width: 991px) 60vw, 500px" 
                : "(max-width: 767px) 43vw, (max-width: 991px) 30vw, 200px" // Adjusted sizes for potentially smaller cells
            }
            format="webp"
            quality={75}
            loading="lazy"
            decoding="async"
            class="highlight-image"
          />
        </div>
      ))}
    </div>
    <div class="text-content">
      <h2 class="section-title"><span>{content.title}</span></h2>
      <p>{content.paragraph1}</p>
      {content.paragraph2 && <p>{content.paragraph2}</p>}
      <a href={content.buttonLink} class="btn btn-accent">{content.buttonText}</a>
    </div>
  </div>
</section>

<style>
  /* Ensure global CSS with color variables is imported in your layout */

  .project-highlights-section {
    padding: 4rem 1rem; /* Added horizontal padding */
    background-color: var(--light-bg); /* Or white */
    width: 100%;
    max-width: 100%;
    overflow-x: hidden; /* Prevent horizontal scroll */
    box-sizing: border-box; /* Include padding in width calculation */
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    width: 100%;
    box-sizing: border-box; /* Include padding in width calculation */
    display: grid;
    grid-template-columns: 1fr; /* Single column for mobile */
    gap: 2.5rem;
    align-items: center; 
  }

  @media (min-width: 992px) { /* Desktop: two columns */
    .container {
      grid-template-columns: 1fr 1fr; 
      gap: 3rem;
    }
    .image-gallery {
      order: 1; /* Images on the left */
    }
    .text-content {
      order: 2; /* Text on the right */
    }
  }

  .image-gallery {
    display: grid;
    gap: 1rem; /* Gap between images */
    align-items: stretch; 
    /* Default for mobile & tablet: 2x2 grid */
    grid-template-columns: 1fr 1fr; 
    grid-template-rows: auto auto; /* Allow rows to size based on content */
    width: 100%; /* Ensure gallery doesn't overflow */
    box-sizing: border-box;
  }

  .gallery-item {
    overflow: hidden; 
    border-radius: 8px; 
    width: 100%;
    box-sizing: border-box;
  }
  
  /* Mobile and Tablet (up to 991px) Layout for Gallery Items */
  @media (max-width: 991px) {
    /* If a large image is present, it takes the first row full width */
    .gallery-item.large { 
      grid-column: 1 / -1; /* Span full width */
      grid-row: 1 / 2;    /* First row */
    }
    /* Subsequent items will flow into a 2-column layout below the large image */
    /* For 1 large and 3 small: */
    .gallery-item.large + .gallery-item { /* First small image */
        grid-column: 1 / 2;
        grid-row: 2 / 3;
    }
    .gallery-item.large + .gallery-item + .gallery-item { /* Second small image */
        grid-column: 2 / 3;
        grid-row: 2 / 3;
    }
    .gallery-item.large + .gallery-item + .gallery-item + .gallery-item { /* Third small image */
        grid-column: 1 / -1; /* Takes full width in the third row if large image is present */
        grid-row: 3 / 4;
    }
    /* If NO large image, it defaults to a 2x2 grid due to .image-gallery's columns */
  }

  /* On very small screens, force one column for better display */
  @media (max-width: 480px) {
    .image-gallery {
      grid-template-columns: 1fr; /* Force single column on smallest screens */
    }
    
    .gallery-item,
    .gallery-item.large,
    .gallery-item.large + .gallery-item,
    .gallery-item.large + .gallery-item + .gallery-item,
    .gallery-item.large + .gallery-item + .gallery-item + .gallery-item {
      grid-column: 1 / -1; /* All items take full width */
      grid-row: auto; /* Let grid auto-place rows */
    }
  }

  /* Desktop Layout for Gallery (min-width: 992px) */
  @media (min-width: 992px) {
    .image-gallery {
      /* Layout for 1 large image and 3 small images */
      grid-template-columns: 2fr 1fr;  /* Left column (large) wider, right column (small) narrower */
      grid-template-rows: repeat(3, 1fr); /* Three rows for the 3 small images */
      max-height: 600px; /* Optional: constrain gallery height */
    }

    .gallery-item.large { /* This should target gallery-item-1 if it's the large one */
      grid-column: 1 / 2;  /* First column */
      grid-row: 1 / 4;     /* Span all three rows */
    }

    /* Specific placement for the 3 smaller images in the second column */
    /* This assumes the large image is gallery-item-1 */
    .gallery-item-2 { 
      grid-column: 2 / 3;  /* Second column */
      grid-row: 1 / 2;     /* First row in the second column */
    }

    .gallery-item-3 { 
      grid-column: 2 / 3;  /* Second column */
      grid-row: 2 / 3;     /* Second row in the second column */
    }
    .gallery-item-4 {
      grid-column: 2 / 3; /* Second column */
      grid-row: 3 / 4;    /* Third row in the second column */
    }
    /* If no image is marked 'isLarge', the default 2x2 grid from .image-gallery will apply.
       You might need more generic rules or a different grid setup if 'isLarge' isn't used
       or if multiple are large. For this specific 1 large + 3 small, this works. */
  }


  .highlight-image {
    width: 100%;
    height: 100%;
    object-fit: cover; 
    display: block; 
    border-radius: 8px; 
  }

  .text-content {
    padding: 0; /* Removed padding that might cause overflow */
    width: 100%;
    box-sizing: border-box;
  }

  .section-title {
    font-size: 2.2rem;
    color: var(--dark-blue);
    margin-bottom: 1.5rem;
    font-weight: 700;
    position: relative;
    display: inline-block;
    word-break: break-word; /* Allow words to break if needed */
  }
  .section-title span {
    position: relative;
    padding-bottom: 0.5rem;
  }
  .section-title span::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 50px;
    height: 4px;
    background-color: var(--primary-color); 
  }

  .text-content p {
    font-size: 1rem;
    color: var(--text-color);
    line-height: 1.7;
    margin-bottom: 1.5rem;
    width: 100%;
    word-wrap: break-word; /* Allow long words to be broken */
  }

  .btn {
    padding: 0.85rem 2rem;
    border-radius: 5px;
    font-weight: 600;
    text-transform: uppercase;
    text-decoration: none;
    cursor: pointer;
    transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
    font-size: 0.9rem;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border: 2px solid transparent;
    max-width: 100%; /* Don't exceed container width */
    box-sizing: border-box;
  }

  .btn-accent { 
    background-color: var(--primary-color);
    color: var(--text-light); 
    border-color: var(--primary-color);
  }
  .btn-accent:hover,
  .btn-accent:focus {
    background-color: var(--primary-hover); 
    border-color: var(--primary-hover);
    color: var(--text-light);
  }
  
  @media (max-width: 767px) { /* Mobile specific adjustments */
    .image-gallery {
      order: 1; 
      /* Mobile defaults to 2x2 grid due to .image-gallery columns if no .large item */
    }
    .gallery-item.large {
        /* Already handled by max-width: 991px rule to span full width in first row */
    }
    /* If no large image, the 2x2 grid from .image-gallery applies.
       If there is a large image, the 3 small ones flow after it.
       The third small image might be alone on a new row if .large is present.
       Adjust .gallery-item-large + ... rules if a different mobile flow is needed for 3 small images.
    */

    .text-content {
      order: 2; 
      text-align: center; 
    }
    .section-title {
      font-size: 1.8rem;
    }
    .section-title span::after {
      left: 50%;
      transform: translateX(-50%); 
    }
    .text-content p {
      font-size: 0.95rem;
    }
    .btn-accent {
        margin: 0 auto; 
    }
  }
</style>