---
// src/components/ProductCategoryFilterBar.astro
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';
import categoriesData from '../data/categories.json';

interface CategoryJsonItem {
  id: string;
  name: string;
  image: string; 
  isFeatured?: boolean; 
}

interface CategoryFilterItem {
  id: string;
  name: string;
  link: string;
  imageMeta?: ImageMetadata;
  isActive?: boolean; 
}

const allCategoryImages = import.meta.glob<{ default: ImageMetadata }>(
  '/src/assets/images/categories/**/*.{jpeg,jpg,png,webp,gif,svg}',
  { eager: true }
);

const imageMetaMap = new Map<string, ImageMetadata>();
for (const path in allCategoryImages) {
  imageMetaMap.set(path, allCategoryImages[path].default);
}

const actualCategories: CategoryFilterItem[] = categoriesData.map((categoryJson: any) => {
  const category = categoryJson as CategoryJsonItem;
  let imageMeta: ImageMetadata | undefined = undefined;
  if (imageMetaMap.has(category.image)) {
    imageMeta = imageMetaMap.get(category.image);
  } else {
    console.warn(`[CategoryFilterBar] Image not found for category "${category.name}" at path: ${category.image}.`);
  }
  return {
    id: category.id,
    name: category.name,
    imageMeta: imageMeta,
    link: `/products/category/${category.id}` 
  };
});

const { currentFilterId = "all" } = Astro.props; 

// Calculate animation duration based on number of categories
// Adjust the multiplier (e.g., 3s per category) for desired speed
const animationDuration = actualCategories.length * 8; 
---

<div class="category-filter-bar-section">
  <div class="container category-filter-bar-container">
    {/* Static "All Products" Tab */}
    <a 
      href="/products" 
      class:list={["filter-item", "all-products-tab", { active: currentFilterId === "all" }]}
      title="View All Products"
    >
      <div class="filter-item-image-placeholder material-symbols-outlined">widgets</div>
      <span class="filter-item-name">All Products</span>
    </a>

    {/* Scrolling Categories Area */}
    {actualCategories.length > 0 && (
      <div class="scrolling-categories-wrapper">
        <div class="scrolling-track" style={`--animation-duration: ${animationDuration}s;`}>
          {actualCategories.map(item => (
            <a 
              href={item.link} 
              class:list={["filter-item", { active: item.id === currentFilterId }]}
              title={`View ${item.name}`}
            >
              {item.imageMeta && (
                <div class="filter-item-image-wrapper">
                  <Image 
                    src={item.imageMeta} 
                    alt={`${item.name} icon`}
                    class="filter-item-image"
                    width={24} height={24} format="webp" quality="mid" loading="lazy"
                  />
                </div>
              )}
              {!item.imageMeta && (<div class="filter-item-image-placeholder material-symbols-outlined">category</div>)}
              <span class="filter-item-name">{item.name}</span>
            </a>
          ))}
          {actualCategories.map(item => ( /* Duplicate for infinite scroll */
            <a 
              href={item.link} 
              class:list={["filter-item", { active: item.id === currentFilterId }]}
              title={`View ${item.name}`}
              aria-hidden="true" tabindex="-1" 
            >
              {item.imageMeta && (
                <div class="filter-item-image-wrapper">
                  <Image 
                    src={item.imageMeta} 
                    alt="" 
                    class="filter-item-image"
                    width={24} height={24} format="webp" quality="mid" loading="lazy"
                  />
                </div>
              )}
              {!item.imageMeta && (<div class="filter-item-image-placeholder material-symbols-outlined">category</div>)}
              <span class="filter-item-name">{item.name}</span>
            </a>
          ))}
        </div>
      </div>
    )}
  </div>
</div>

<style>
  .category-filter-bar-section {
    padding: 1rem 0 1.5rem 0;
    background-color: var(--light-gray);
    border-bottom: 1px solid var(--medium-gray);
  }

  .category-filter-bar-container {
    display: flex;
    align-items: center;
    gap: 1rem; /* Gap between "All Products" and the scroller */
  }

  .all-products-tab {
    flex-shrink: 0; /* Prevent "All Products" tab from shrinking */
  }

  .scrolling-categories-wrapper {
    flex-grow: 1; /* Allow scroller to take remaining space */
    overflow: hidden; /* This is crucial */
    position: relative; /* For potential pseudo-elements like fades */
    mask-image: linear-gradient(to right, transparent, black 5%, black 95%, transparent);
    -webkit-mask-image: linear-gradient(to right, transparent, black 5%, black 95%, transparent);
  }

  .scrolling-track {
    display: flex;
    width: max-content; /* Let the content (doubled list) determine width */
    animation: scrollCategories var(--animation-duration) linear infinite;
  }
  .scrolling-categories-wrapper:hover .scrolling-track {
    animation-play-state: paused;
  }

  @keyframes scrollCategories {
    0% {
      transform: translateX(0%);
    }
    100% {
      transform: translateX(-50%); /* Scroll by the width of one set of items */
    }
  }

  .filter-item {
    display: inline-flex;
    align-items: center;
    padding: 0.6rem 1rem;
    margin-right: 0.75rem; 
    border: 1px solid var(--medium-gray);
    border-radius: var(--border-radius, 20px); 
    background-color: var(--light-bg, #fff);
    color: var(--text-color);
    text-decoration: none;
    font-size: 0.9rem;
    font-weight: 500;
    transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease, box-shadow 0.3s ease;
    box-shadow: 0 1px 3px rgba(0,0,0,0.05);
    white-space: nowrap; 
  }
  .filter-item:last-child { /* Last item in each set */
    margin-right: 0; 
  }
   /* Add back margin to the actual last child of the duplicated track to maintain spacing before loop restarts */
  .scrolling-track > .filter-item:nth-child({actualCategories.length}) {
      margin-right: 0.75rem;
  }


  .filter-item:hover {
    background-color: var(--primary-color);
    color: var(--text-light);
    border-color: var(--primary-color);
    box-shadow: 0 2px 6px rgba(var(--primary-color-rgb, 41, 164, 240), 0.3);
  }

  .filter-item.active {
    background-color: var(--dark-blue);
    color: var(--text-light);
    border-color: var(--dark-blue);
    font-weight: 600;
  }

  .filter-item-image-wrapper {
    width: 24px; 
    height: 24px;
    margin-right: 0.6rem;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden; 
    border-radius: 3px; 
  }
  .filter-item-image { 
    width: 100%;
    height: 100%;
    object-fit: contain; 
  }
  .filter-item-image-placeholder {
    width: 24px;
    height: 24px;
    margin-right: 0.6rem;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.2rem; 
    color: var(--secondary-color);
  }
  .filter-item.active .filter-item-image-placeholder {
    color: var(--text-light); 
  }
  .filter-item-name {
    white-space: nowrap; 
  }

  @media (max-width: 768px) {
    .category-filter-bar-container {
        /* On smaller screens, you might want the "All Products" tab to be less prominent 
           or the scroller to take more precedence if space is very tight. 
           For now, flex handles basic shrinking. */
    }
    .filter-item {
        padding: 0.5rem 0.8rem;
        font-size: 0.85rem;
    }
    .scrolling-categories-wrapper {
        mask-image: linear-gradient(to right, transparent, black 2%, black 98%, transparent);
        -webkit-mask-image: linear-gradient(to right, transparent, black 2%, black 98%, transparent);
    }
  }
</style>
