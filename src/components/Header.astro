---
// src/components/Header.astro

// Define SVG icons as strings
// Using simple examples - replace with more accurate/detailed SVGs if desired
const svgFacebook = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" width="1em" height="1em"><path d="M14 13.5h2.5l1-4H14v-2c0-1.03 0-2 2-2h1.5V2.14c-.326-.043-1.557-.14-2.857-.14C11.928 2 10 3.657 10 6.7v2.8H7v4h3V22h4v-8.5z"></path></svg>`;
const svgTwitter = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" width="1em" height="1em"><path d="M22.46 6c-.77.35-1.6.58-2.46.67.88-.53 1.56-1.37 1.88-2.38-.83.5-1.75.85-2.72 1.05C18.37 4.5 17.26 4 16 4c-2.35 0-4.27 1.92-4.27 4.29 0 .34.04.67.11.98C8.28 9.09 5.11 7.38 3 4.79c-.37.63-.58 1.37-.58 2.15 0 1.49.75 2.81 1.91 3.56-.71 0-1.37-.22-1.95-.53v.05c0 2.08 1.48 3.82 3.44 4.21a4.22 4.22 0 0 1-1.93.07 4.28 4.28 0 0 0 4 2.98 8.521 8.521 0 0 1-5.33 1.84c-.34 0-.68-.02-1.01-.06C3.18 20.57 5.32 21 7.66 21c7.4 0 11.48-6.13 11.48-11.48l-.01-.52c.78-.57 1.45-1.28 1.99-2.08z"></path></svg>`;
const svgLinkedIn = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" width="1em" height="1em"><path d="M6.5 21.5h-5v-13h5v13zM4 6.5C2.5 6.5 1.5 5.3 1.5 4s1-2.4 2.5-2.4c1.6 0 2.5 1 2.6 2.4 0 1.4-1 2.5-2.6 2.5zm11.5 6c-1 0-2 1-2 2v7h-5v-13h5V10s1.6-1.5 4-1.5c3 0 5 2.2 5 7.5V21.5h-5v-7c0-.7 0-1-1-1s-1 0-1 1v7z"></path></svg>`;
// Example for Pinterest (or replace with Instagram, etc.)
const svgPinterest = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" width="1em" height="1em"><path d="M12.017 2C6.486 2 2 6.486 2 12.017c0 4.405 2.867 8.153 6.838 9.506.09-.648.18-1.956.33-2.61.136-.582.837-.35.837-.35s-.207-.833-.207-1.704c0-1.603.934-2.808 2.104-2.808 1.002 0 1.48.753 1.48 1.663 0 1.005-.64 2.516-.975 3.901-.278 1.17-.134 2.14.46 2.14 1.31 0 2.306-2.5 2.306-5.075 0-2.748-1.913-4.727-5.04-4.727-3.53 0-5.65 2.64-5.65 5.318 0 .998.37 1.92.86 2.474.082.09.09.18.06.286-.07.288-.24.972-.29.18-.05.22-.2.04-.46 0-1.78-.94-3.45-2.73-3.45-2.21 0-3.93 1.68-3.93 4.185 0 1.53.94 3.17 2.24 3.17.72 0 1.3-.91.13-1.98-.14-.36-.23-.75-.23-1.17 0-.99.48-1.91 1.4-1.91 1.18 0 2.15 1.18 2.15 2.862 0 1.69-.9 3.36-2.16 3.36-.67 0-1.3-.34-1.5-.74 0 0-.33 1.3-.4 1.6-.16.68-.6 1.54-.9 2.05.66.21 1.36.33 2.08.33 5.53 0 10.017-4.486 10.017-10.017C22.017 6.486 17.547 2 12.017 2z"></path></svg>`;

const socialLinks = [
  { name: 'Facebook', icon: svgFacebook, url: '#' },
  { name: 'Twitter', icon: svgTwitter, url: '#' },
  { name: 'LinkedIn', icon: svgLinkedIn, url: '#' },
  { name: 'Pinterest', icon: svgPinterest, url: '#' }, // Using Pinterest SVG example
];

const navLinks = [
  { text: 'HOME', url: '/' },
  { text: 'PRODUCTS', url: '/products' },
  { text: 'PROJECTS', url: '/projects' },
  { text: 'SERVICES', url: '/services' },
  { text: 'BLOG', url: '/blog' },
  { text: 'CONTACT', url: '/contact' },
];

// For Material Symbols: <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
---

<header class="site-header">
  <div class="top-bar">
    <div class="container top-bar-content">
      <div class="contact-info">
        <a href="mailto:info@onco.lk" class="top-bar-link">
          <span class="material-symbols-outlined">mail</span>info@onco.lk
        </a>
        <span class="top-bar-link">
          <span class="material-symbols-outlined">call</span> +94 114 330 388
        </span>
      </div>
      <div class="social-media">
        <span class="follow-text">Follow:</span>
        {socialLinks.map(social => (
          <a href={social.url} aria-label={social.name} class="social-icon top-bar-link" set:html={social.icon}>
            {/* SVG is rendered here using set:html */}
          </a>
        ))}
      </div>
    </div>
  </div>

  {/* ... rest of the header HTML remains the same ... */}
  <div class="middle-bar">
    <div class="container middle-bar-content">
      <div class="logo">
        <a href="/">
          <span class="logo-icon">
            <img src="/images/logo/onco-globe-only.png" alt="Onco Solutions globe logo" onerror="this.style.display='none'; this.onerror=null; const p=document.createElement('p'); p.textContent='Logo'; this.parentNode.appendChild(p);" />
          </span>
          <div class="logo-text-wrapper">
            <span class="logo-text-main"><span class="onco-logo">onco</span>solutions</span>
            <span class="logo-text-sub">Lighting & automation</span>
          </div>
        </a>
      </div>
      <div class="certifications"> {/* This will be hidden on mobile */}
        <div class="certification-item">
          <div>
            <span class="cert-title">PHILIPS & SCHNEIDER</span>
            <span class="cert-subtitle">AUTOMATION CERTIFIED</span>
          </div>
        </div>
        <div class="certification-item">
          <div>
            <span class="cert-title">MADRIX LED</span>
            <span class="cert-subtitle">DMX CERTIFIED</span>
          </div>
        </div>
      </div>
      {/* Mobile menu toggle moved here for mobile view */}
      <button class="mobile-menu-toggle" aria-label="Toggle menu" aria-expanded="false" aria-controls="mobile-menu-nav">
        <span class="material-symbols-outlined hamburger-icon">menu</span>
        <span class="material-symbols-outlined close-icon">close</span>
      </button>
    </div>
  </div>

  <nav class="main-navigation">
    <div class="container nav-content">
      <div class="nav-links-wrapper" id="mobile-menu-nav">
        <ul class="nav-links">
          {navLinks.map(link => (
            <li><a href={link.url} class:list={{ active: Astro.url.pathname === link.url }}>{link.text}</a></li>
          ))}
        </ul>
        <a href="/request-quote" class="request-quote-btn desktop-quote-btn">Request Quote</a>
      </div>
    </div>
  </nav>
</header>

<style>
  /* ... existing styles up to .social-media ... */

  .social-media {
    display: flex;
    align-items: center;
  }
  .follow-text {
    margin-right: 0.5rem;
  }
  .social-icon.top-bar-link { /* Style the <a> tag containing the SVG */
    color: var(--medium-gray); /* Default SVG color (via fill: currentColor below) */
    margin-left: 0.75rem; /* Increased spacing slightly for icons */
    display: inline-flex; /* Helps align SVG vertically if needed */
    align-items: center;
    text-decoration: none; /* Ensure no underline */
    transition: color 0.3s ease;
  }
  .social-icon.top-bar-link svg { /* Style the SVG element itself */
    width: 1em; /* Adjust size as needed, relative to font size */
    height: 1em; /* Adjust size as needed */
    fill: currentColor; /* Crucial: SVG color inherits from parent <a> tag's color */
  }
  .social-icon.top-bar-link:hover {
    color: var(--primary-color); /* Hover color for the icon */
  }
  /* Remove the general .top-bar-link:hover for social icons if it conflicts */
  /* .top-bar-link:hover {
    color: var(--text-light);
  } */

  /* ... rest of the existing styles ... */

  /* Ensure the base .top-bar-link styles don't interfere negatively */
  .top-bar-link {
    color: var(--primary-color); /* Default color for text links */
    text-decoration: none;
    display: flex;
    align-items: center;
    transition: color 0.3s ease;
    margin-right: 1rem;
  }
  .top-bar-link:hover { /* General hover for text links */
     color: var(--text-light);
  }

  /* ... all other styles remain the same ... */
  /* CSS Variables for heights, useful for positioning */
  :root {
    --top-bar-padding: 0.25rem;
    --top-bar-min-height: 15px;
    --top-bar-actual-height: calc(var(--top-bar-min-height) + (var(--top-bar-padding) * 2)); /* approx 23px */
    --middle-bar-height: 50px;
    --nav-bar-height: 30px; /* Desktop nav bar height */
  }

  .site-header {
    font-family: var(--font-family-montserrat, sans-serif);
    position: sticky; /* Sticky header */
    top: 0;
    left: 0;
    width: 100%;
    z-index: 1020; /* High z-index to stay on top */
    box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    background-color: var(--light-bg); 
  }

  .container {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 15px;
    box-sizing: border-box;
  }

  .material-symbols-outlined {
    font-size: 1rem;
    padding-right: 0.2rem;
    vertical-align: middle;
  }

  /* Top Bar Styles */
  .top-bar {
    background-color: var(--dark-blue);
    color: var(--primary-color);
    min-height: var(--top-bar-min-height);
    display: flex;
    align-items: center;
    padding: var(--top-bar-padding) 0;
    font-size: 0.8rem;
    position: relative; 
    z-index: 2; 
  }
  .top-bar-content {
    display: flex;
    justify-content: space-between; /* Default for desktop and tablet */
    align-items: center;
    flex-wrap: wrap; /* Allows contact-info and social-media to wrap if needed */
    width: 100%;
  }
  .contact-info {
    display: flex;
    align-items: center;
    flex-wrap: nowrap; /* Prevents internal wrapping of email and phone */
  }
  .top-bar-link .material-symbols-outlined {
    font-size: 1.1em;
  }
  .contact-info .top-bar-link:last-child {
    margin-right: 0;
  }

  /* Middle Bar Styles */
  .middle-bar {
    background-color: var(--light-bg); 
    height: var(--middle-bar-height);
    display: flex;
    align-items: center;
    border-bottom: 1px solid var(--medium-gray);
    position: relative; 
    z-index: 1; 
  }
  .middle-bar-content {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 100%;
    width: 100%; 
  }
  .logo a {
    text-decoration: none;
    display: flex;
    align-items: center;
    height: 100%;
  }
  .logo-icon img {
    max-height: 35px;
    margin-right: 0.75rem;
  }
  .logo-text-wrapper {
    display: flex;
    flex-direction: column;
    border-left: 1px var(--secondary-color) solid;
    padding-left: 0.75rem;
  }
  .logo-text-main {
    font-size: 1.5rem;
    font-weight: 600;
    text-transform: uppercase;
    color: var(--secondary-color);
    line-height: 1.1;
  }
  .logo-text-main .onco-logo {
    color: var(--primary-color);
  }
  .logo-text-sub {
    font-size: 0.6rem;
    color: var(--secondary-color);
    text-transform: uppercase;
    letter-spacing: 4.6px;
    line-height: 1;
  }
  .certifications { 
    display: flex;
    align-items: center;
    height: 100%;
  }
  .certification-item {
    display: flex;
    align-items: center;
    margin-left: 1.5rem;
    color: var(--dark-blue);
  }
  .cert-title {
    display: block;
    font-weight: bold;
    font-size: 0.8rem;
    text-transform: uppercase;
  }
  .cert-subtitle {
    display: block;
    font-size: 0.7rem;
    color: var(--secondary-color);
    text-transform: uppercase;
  }

  /* Navigation Bar Styles (Desktop) */
  .main-navigation {
    background-color: var(--primary-color);
    height: var(--nav-bar-height);
    position: relative; 
    z-index: 1;
  }
  .nav-content { 
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 100%;
  }

  /* Mobile Menu Toggle Button */
  .mobile-menu-toggle {
    display: none; 
    background: none;
    border: none;
    color: var(--dark-blue);
    cursor: pointer;
    padding: 0.25rem;
    z-index: 1001; 
  }
  .mobile-menu-toggle .material-symbols-outlined {
    font-size: 2rem;
    padding-right: 0;
  }
  .mobile-menu-toggle .close-icon { display: none; }
  .mobile-menu-toggle.is-active .hamburger-icon { display: none; }
  .mobile-menu-toggle.is-active .close-icon { display: inline; }

  /* Nav Links Wrapper */
  .nav-links-wrapper {
    display: flex; 
    align-items: center;
    height: 100%;
    width: 100%; 
    justify-content: space-between; 
  }

  .nav-links { 
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex; 
    height: 100%;
  }
  .nav-links li {
    display: flex;
    height: 100%;
  }
  .nav-links li a {
    color: var(--dark-blue);
    text-decoration: none;
    padding: 0 1rem;
    display: flex;
    align-items: center;
    font-weight: 600;
    font-size: 0.8rem;
    transition: background-color 0.3s ease, color 0.3s ease;
    height: 100%;
    text-transform: uppercase;
  }
  .nav-links li a:hover,
  .nav-links li a.active {
    color: var(--text-light);
    background-color: var(--dark-blue);
  }

  .request-quote-btn { 
    background-color: var(--dark-blue);
    color: var(--text-light);
    padding: 0 0.95rem;
    text-decoration: none;
    font-weight: 600;
    font-size: 0.8rem;
    border-radius: 4px;
    transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
    display: flex;
    align-items: center;
    height: calc(100% - 4px);
    max-height: 26px; 
    box-sizing: border-box;
    border: 2px solid transparent;
    text-transform: uppercase;
  }
  .request-quote-btn:hover,
  .request-quote-btn:focus {
    background-color: var(--primary-color);
    color: var(--dark-blue);
    border-color: var(--dark-blue);
    text-decoration: none;
  }

  /* Responsive Adjustments & Mobile Menu (Breakpoint: 992px) */
  @media (max-width: 992px) {
    .certifications {
      display: none; 
    }
    .logo {
      margin-bottom: 0; 
    }
    .mobile-menu-toggle {
      display: flex; 
      align-items: center;
    }
    .main-navigation {
      height: 0;
      padding: 0;
      border: none;
      background-color: transparent; 
      overflow: visible; 
    }
    .nav-content { 
      display: block; 
      height: auto;
      padding: 0; 
    }
    .nav-links-wrapper {
      display: none; 
      position: absolute;
      top: 0; 
      left: 0;
      width: 100%;
      background-color: var(--primary-color);
      flex-direction: column;
      align-items: stretch; /* Makes child ul/li take full width */
      padding: 1rem 0;
      box-shadow: 0 4px 8px rgba(0,0,0,0.1);
      z-index: 1000; 
      height: auto;
    }
    .nav-links-wrapper.is-open {
      display: flex; 
    }
    .nav-links { 
      flex-direction: column;
      width: 100%;
      height: auto;
    }
    .nav-links li {
      width: 100%;
      height: auto;
    }
    .nav-links li a {
      padding: 0.75rem 1rem;
      justify-content: center; /* This centers the text within the link */
      text-align: center; /* Added for good measure */
      border-bottom: 1px solid rgba(var(--dark-blue-rgb, 1, 36, 92), 0.2);
      height: auto;
    }
    .nav-links li:last-child a {
      border-bottom: none;
    }
    .desktop-quote-btn { 
      display: flex; 
      width: calc(100% - 2rem);
      margin: 1rem auto 0 auto;
      justify-content: center;
      padding: 0.75rem 1rem;
      max-height: none; 
      height: auto;
    }
  }

  @media (max-width: 768px) {
    .top-bar {
        font-size: 0.75rem;
        padding: 0.2rem 0;
    }
    .social-media {
        margin-top: 0.25rem;
    }
    .logo-text-main { font-size: 1.3rem; }
    .logo-text-sub { font-size: 0.65rem; letter-spacing: 2.5px; }
  }

  @media (max-width: 480px) {
    /* Center top bar content when it stacks at this smaller breakpoint */
    .top-bar-content {
        flex-direction: column; /* Stack .contact-info and .social-media */
        align-items: center; /* Center them horizontally */
        justify-content: center; 
    }
    .contact-info {
        margin-bottom: 0.25rem; /* Add space when stacked above social media */
    }
    .social-media {
        margin-top: 0; /* Reset margin-top as space is handled by .contact-info */
    }
    
    .middle-bar-content {
        /* align-items: center; */ /* If logo and toggle need to be centered if they stack */
    }
    .logo {
        /* width: 100%; */
        /* justify-content: center; */
        /* margin-bottom: 0.75rem; */
    }
  }
</style>

<script>
  // Client-side script for mobile menu toggle
  const menuToggle = document.querySelector('.mobile-menu-toggle');
  const navLinksWrapper = document.querySelector('.nav-links-wrapper');

  if (menuToggle && navLinksWrapper) {
    menuToggle.addEventListener('click', () => {
      const isActive = menuToggle.classList.toggle('is-active');
      navLinksWrapper.classList.toggle('is-open');
      menuToggle.setAttribute('aria-expanded', isActive.toString());
    });
  }
</script>
