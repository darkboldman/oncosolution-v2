---
// src/components/ProductCard.astro
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';

// Based on your product JSON structure
export interface Product {
  id: string;
  category?: string; // From the parent JSON filename or an explicit field
  name: string;
  shortDescription?: string;
  price?: number;
  featured?: "yes" | "no";
  images: string[]; // Array of image filenames or public paths
  slug: string; // Should be generated and added to the product object
  imageMeta?: ImageMetadata; // For processed image from astro:assets
}

export interface Props {
  product: Product;
}

const { product } = Astro.props;
const productDetailUrl = `/products/detail/${product.slug}`; // Link to individual product page

// Use imageMeta if available (from astro:assets processing), else use first image from public path
const imageToDisplay = product.imageMeta || (product.images && product.images.length > 0 ? product.images[0] : '/images/placeholder-product.jpg');
const imageAltText = product.name ? `Image of ${product.name}` : "Product image";
---
<article class="product-card">
  <a href={productDetailUrl} class="product-card-link">
    <div class="product-image-wrapper">
      {typeof imageToDisplay === 'string' ? (
        <img 
          src={imageToDisplay} 
          alt={imageAltText} 
          class="product-image" 
          loading="lazy" 
          decoding="async" 
          onerror="this.style.display='none'; const p=document.createElement('p'); p.textContent='Image missing'; this.parentNode.appendChild(p);"
        />
      ) : (
        <Image
          src={imageToDisplay}
          alt={imageAltText}
          class="product-image"
          widths={[200, 400, 600]}
          sizes="(max-width: 639px) 90vw, (max-width: 991px) 45vw, 300px"
          format="webp"
          quality={75}
          loading="lazy"
          decoding="async"
        />
      )}
      {product.featured === "yes" && <span class="featured-badge">Featured</span>}
    </div>
    <div class="product-info">
      <h3 class="product-name">{product.name}</h3>
      {product.shortDescription && <p class="product-short-description">{product.shortDescription.substring(0, 80)}...</p>}
      {/* You can add price here if available and desired */}
      {/* {typeof product.price === 'number' && <p class="product-price">${product.price.toFixed(2)}</p>} */}
    </div>
  </a>
  <a href={productDetailUrl} class="btn btn-details-product">View Details</a>
</article>

<style>
  .product-card {
    background-color: var(--light-bg, #fff);
    border-radius: var(--border-radius, 8px);
    box-shadow: var(--box-shadow, 0 4px 12px rgba(0,0,0,0.08));
    overflow: hidden;
    display: flex;
    flex-direction: column;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    height: 100%; 
  }
  .product-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 16px rgba(0,0,0,0.12);
  }
  .product-card-link {
    text-decoration: none;
    color: inherit;
    display: flex;
    flex-direction: column;
    flex-grow: 1;
  }
  .product-image-wrapper {
    width: 100%;
    aspect-ratio: 1 / 1; /* Square images for product cards */
    background-color: var(--medium-gray, #eee);
    overflow: hidden;
    position: relative;
  }
  .product-image {
    width: 100%;
    height: 100%;
    object-fit: cover; /* Or 'contain' if you don't want cropping */
    transition: transform 0.4s ease;
  }
  .product-card:hover .product-image {
    transform: scale(1.05);
  }
  .featured-badge {
    position: absolute;
    top: 0.75rem;
    right: 0.75rem;
    background-color: var(--orange-color); /* Example accent */
    color: var(--text-light);
    padding: 0.25rem 0.6rem;
    border-radius: var(--border-radius, 4px);
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
    z-index: 1;
  }
  .product-info {
    padding: 1rem;
    flex-grow: 1;
    display: flex;
    flex-direction: column;
  }
  .product-name {
    font-size: 1.1rem;
    font-weight: 600;
    color: var(--dark-blue);
    margin-bottom: 0.5rem;
    line-height: 1.3;
  }
  .product-short-description {
    font-size: 0.85rem;
    color: var(--text-color);
    line-height: 1.5;
    margin-bottom: 0.75rem;
    flex-grow: 1; /* Allow description to push button down */
  }
  .product-price {
    font-size: 1rem;
    font-weight: bold;
    color: var(--primary-color);
    margin-bottom: 1rem;
  }
  .btn-details-product {
    display: block;
    background-color: var(--primary-color);
    color: var(--text-light);
    text-align: center;
    padding: 0.75rem 1rem;
    text-decoration: none;
    font-weight: 500;
    font-size: 0.9rem;
    border-bottom-left-radius: var(--border-radius, 8px);
    border-bottom-right-radius: var(--border-radius, 8px);
    transition: background-color 0.3s ease;
    margin-top: auto; 
  }
  .btn-details-product:hover {
    background-color: var(--primary-hover);
  }
</style>
