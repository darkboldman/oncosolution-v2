---
// src/components/ProductCard.astro
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';
import type { ImageMetadata } from 'astro';

// --- NEW: Use import.meta.glob to import all product images ---
// This creates a map of all images in the directory that we can look up.
const allProductImages = import.meta.glob<{ default: ImageMetadata }>(
  '/src/assets/images/products/**/*.{jpeg,jpg,png,webp,gif,svg}'
);

export interface Props {
  product: CollectionEntry<'products'>;
  categorySlug: string;
}

const { product, categorySlug } = Astro.props;
const { data } = product;

const productDetailUrl = `/products/${categorySlug}/${data.slug}`;

// Get the path for the first image from the product's data
const firstImageInfo = data.images && data.images.length > 0 ? data.images[0] : null;
const imagePath = firstImageInfo ? firstImageInfo.src : null;

// --- NEW: Look up the imported image metadata from our glob map ---
let imageMetadata: ImageMetadata | undefined;
if (imagePath && allProductImages[imagePath]) {
  // The 'await' is needed because glob returns a promise for the module
  const imageModule = await allProductImages[imagePath]();
  imageMetadata = imageModule.default;
} else if (imagePath) {
  console.warn(`[ProductCard] Image not found for product "${data.name}" at path: ${imagePath}`);
}

const imageAltText = firstImageInfo ? firstImageInfo.alt : `Image of ${data.name}`;
---
<article class="product-card">
  <a href={productDetailUrl} class="product-card-link">
    <div class="product-image-wrapper">
      
      {/* --- CHANGED: Use the <Image /> component if metadata exists --- */}
      {imageMetadata ? (
        <Image
          src={imageMetadata}
          alt={imageAltText}
          class="product-image"
          widths={[200, 400, 600]}
          sizes="(max-width: 639px) 90vw, (max-width: 991px) 45vw, 300px"
          format="webp"
          quality={80}
          loading="lazy"
          decoding="async"
        />
      ) : (
        <img 
          src="/images/placeholder-product.jpg" 
          alt="Placeholder product image" 
          class="product-image"
        />
      )}

      {data.isFeatured && <span class="featured-badge">Featured</span>}
    </div>
    <div class="product-info">
      <h3 class="product-name">{data.name}</h3>
      {data.shortDescription && <p class="product-short-description">{data.shortDescription.substring(0, 80)}...</p>}
    </div>
  </a>
  <a href={productDetailUrl} class="btn btn-details-product">View Details</a>
</article>

<style>
  /* Styles are unchanged */
  .product-card {
    background-color: var(--light-bg, #fff);
    border-radius: var(--border-radius, 8px);
    box-shadow: 0 4px 12px rgba(0,0,0,0.08);
    overflow: hidden;
    display: flex;
    flex-direction: column;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    height: 100%; 
  }
  .product-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 16px rgba(0,0,0,0.12);
  }
  .product-card-link {
    text-decoration: none;
    color: inherit;
    display: flex;
    flex-direction: column;
    flex-grow: 1;
  }
  .product-image-wrapper {
    width: 100%;
    aspect-ratio: 1 / 1;
    background-color: var(--medium-gray, #eee);
    overflow: hidden;
    position: relative;
  }
  .product-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.4s ease;
  }
  .product-card:hover .product-image {
    transform: scale(1.05);
  }
  .featured-badge {
    position: absolute;
    top: 0.75rem;
    right: 0.75rem;
    background-color: var(--orange-color);
    color: var(--text-light);
    padding: 0.25rem 0.6rem;
    border-radius: var(--border-radius, 4px);
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
    z-index: 1;
  }
  .product-info {
    padding: 1rem;
    flex-grow: 1;
    display: flex;
    flex-direction: column;
  }
  .product-name {
    font-size: 1.1rem;
    font-weight: 600;
    color: var(--dark-blue);
    margin-bottom: 0.5rem;
    line-height: 1.3;
  }
  .product-short-description {
    font-size: 0.85rem;
    color: var(--text-color);
    line-height: 1.5;
    margin-bottom: 0.75rem;
    flex-grow: 1;
  }
  .btn-details-product {
    display: block;
    background-color: var(--primary-color);
    color: var(--text-light);
    text-align: center;
    padding: 0.75rem 1rem;
    text-decoration: none;
    font-weight: 500;
    font-size: 0.9rem;
    border-bottom-left-radius: var(--border-radius, 8px);
    border-bottom-right-radius: var(--border-radius, 8px);
    transition: background-color 0.3s ease;
    margin-top: auto; 
  }
  .btn-details-product:hover {
    background-color: var(--primary-hover);
  }
</style>