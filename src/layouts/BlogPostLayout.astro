---
// src/layouts/BlogPostLayout.astro
import { Image } from 'astro:assets'; 
import type { CollectionEntry } from 'astro:content'; 
import BaseLayout from './BaseLayout.astro'; // Your main site layout

export interface Props {
  entry: CollectionEntry<'blog'>; 
}
const { entry } = Astro.props as Props; 

// Access properties directly from the typed 'entry' object
const frontmatter = entry.data;
const renderPostContent = entry.render; // Assign the render function to a new variable
const { Content } = await renderPostContent(); // Call the render function

const formattedPublishDate = frontmatter.publishDate.toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
});

const formattedUpdatedDate = frontmatter.updatedDate?.toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
});

const heroImageSrc = frontmatter.heroImage;
const heroImageAltText = frontmatter.heroImageAlt || `Hero image for ${frontmatter.title}`;
---
<BaseLayout title={frontmatter.title} description={frontmatter.description}>
  <article class="blog-post-container">
    <header class="post-header">
      {heroImageSrc && (
        <div class="hero-image-wrapper">
          <Image 
            src={heroImageSrc} 
            alt={heroImageAltText} 
            class="hero-image" 
            widths={[400, 800, 1200, 1600]} 
            sizes="(max-width: 768px) 100vw, (max-width: 1200px) 800px, 1200px" 
            format="webp"
            quality={80}
            loading="eager" 
            fetchpriority="high"
          />
        </div>
      )}
      <div class="container content-column">
        <h1 class="post-title">{frontmatter.title}</h1>
        <div class="post-meta">
          {frontmatter.author && <span class="author">By: {frontmatter.author}</span>}
          <time datetime={frontmatter.publishDate.toISOString()} class="publish-date">
            Published: {formattedPublishDate}
          </time>
          {formattedUpdatedDate && frontmatter.updatedDate && frontmatter.updatedDate.toISOString() !== frontmatter.publishDate.toISOString() && (
            <time datetime={frontmatter.updatedDate.toISOString()} class="updated-date">
              (Updated: {formattedUpdatedDate})
            </time>
          )}
        </div>
        {frontmatter.tags && frontmatter.tags.length > 0 && (
          <div class="tags-container">
            {frontmatter.tags.map((tag: string) => (
              <span class="tag">{tag}</span>
            ))}
          </div>
        )}
      </div>
    </header>

    <div class="post-content container content-column">
      <Content /> {/* Rendered Markdown content is injected here */}
    </div>

    <footer class="post-footer container content-column">
      <a href="/blog" class="back-to-blog-link">&laquo; Back to All Articles</a>
    </footer>
  </article>
</BaseLayout>

{/* Styles are identical to astro_blog_post_layout_v2, so I'll omit them here for brevity */}
{/* but ensure you copy them from that artifact or your previous working version. */}
{/* Key style blocks: <style is:global> for .post-content and <style> for layout specifics */}
<style is:global>
  /* Global styles for Markdown content rendered by <Content /> */
  /* These will apply to the HTML generated from your .md files */
  /* Ensure these selectors target elements within .post-content for specificity */

  .post-content h2 {
    font-size: 1.8rem;
    color: var(--dark-blue);
    font-weight: 600;
    margin-top: 2.5rem;
    margin-bottom: 1rem;
    padding-bottom: 0.3rem;
    border-bottom: 2px solid var(--primary-color); 
    display: inline-block; 
  }

  .post-content h3 {
    font-size: 1.5rem;
    color: var(--dark-blue);
    font-weight: 600;
    margin-top: 2rem;
    margin-bottom: 0.75rem;
  }

  .post-content h4 {
    font-size: 1.2rem;
    color: var(--text-color);
    font-weight: 600;
    margin-top: 1.5rem;
    margin-bottom: 0.5rem;
  }

  .post-content p {
    font-size: 1rem; 
    line-height: 1.7;
    color: var(--text-color);
    margin-bottom: 1.25rem;
  }

  .post-content a {
    color: var(--primary-color);
    text-decoration: underline;
    transition: color 0.3s ease;
  }
  .post-content a:hover {
    color: var(--primary-hover);
    text-decoration: none;
  }

  .post-content ul,
  .post-content ol {
    margin-bottom: 1.25rem;
    padding-left: 1.8rem; 
  }
  .post-content ul li,
  .post-content ol li {
    margin-bottom: 0.5rem;
    line-height: 1.6;
  }
  .post-content ul { list-style-type: disc; }
  .post-content ol { list-style-type: decimal; }


  .post-content blockquote {
    border-left: 4px solid var(--primary-color);
    padding: 0.5rem 1rem; 
    margin: 1.5rem 0;
    font-style: italic;
    color: var(--secondary-color); 
    background-color: var(--light-gray); 
    border-radius: 0 var(--border-radius, 5px) var(--border-radius, 5px) 0;
  }
  .post-content blockquote p {
    margin-bottom: 0.5rem; 
  }
  .post-content blockquote p:last-child {
    margin-bottom: 0;
  }


  .post-content pre {
    background-color: var(--dark-gray, #333); 
    color: var(--light-gray, #f5f5f5); 
    padding: 1rem;
    border-radius: var(--border-radius, 5px);
    overflow-x: auto; 
    margin-bottom: 1.5rem;
    font-size: 0.9rem;
  }
  .post-content code { 
    background-color: var(--light-gray);
    padding: 0.2em 0.4em;
    border-radius: 3px;
    font-size: 0.9em;
    color: var(--dark-blue); 
  }
  .post-content pre code { 
    background-color: transparent; 
    padding: 0;
    border-radius: 0;
    font-size: inherit; 
    color: inherit; 
  }

  .post-content table {
    width: 100%;
    border-collapse: collapse;
    margin-bottom: 1.5rem;
    font-size: 0.9rem;
    box-shadow: 0 1px 3px rgba(0,0,0,0.05);
  }
  .post-content th,
  .post-content td {
    border: 1px solid var(--medium-gray);
    padding: 0.6rem 0.85rem; 
    text-align: left;
  }
  .post-content th {
    background-color: var(--light-gray);
    font-weight: 600;
    color: var(--dark-blue);
  }
  .post-content tr:nth-child(even) {
    background-color: rgba(var(--medium-gray-rgb, 221, 221, 221), 0.2); 
  }


  .post-content img { 
    max-width: 100%;
    height: auto;
    border-radius: var(--border-radius, 5px);
    margin: 1.5rem auto; 
    display: block; 
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
  }
  .post-content hr {
    border: none;
    border-top: 2px solid var(--medium-gray);
    margin: 2.5rem 0;
  }
</style>

<style>
  /* Component-specific styles for BlogPostLayout.astro */
  .blog-post-container {
    padding-bottom: 2rem; 
  }

  .post-header {
    margin-bottom: 2rem;
    padding-top: 1rem; 
  }

  .hero-image-wrapper {
    width: 100%;
    max-height: 450px; 
    overflow: hidden;
    margin-bottom: 2rem;
    background-color: var(--medium-gray); 
    border-radius: var(--border-radius, 8px); 
  }
  .hero-image { 
    width: 100%;
    height: 100%;
    object-fit: cover; 
    display: block;
  }

  .content-column { 
    max-width: 800px; 
    margin-left: auto;
    margin-right: auto;
    padding-left: 1rem; 
    padding-right: 1rem;
  }

  .post-title {
    font-size: 2.5rem; 
    color: var(--dark-blue);
    font-weight: 700;
    line-height: 1.2;
    margin-bottom: 0.75rem;
  }
  @media (max-width: 767px) {
    .post-title {
        font-size: 2rem;
    }
  }

  .post-meta {
    font-size: 0.9rem;
    color: var(--secondary-color);
    margin-bottom: 1rem;
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem 1.5rem; 
  }
  .author, .publish-date, .updated-date {
    /* Styles for author and date */
  }
  .updated-date {
    font-style: italic;
  }

  .tags-container {
    margin-top: 0.5rem;
    margin-bottom: 1.5rem;
  }
  .tag {
    display: inline-block;
    background-color: var(--primary-color);
    color: var(--text-light);
    padding: 0.25rem 0.6rem;
    border-radius: var(--border-radius, 15px);
    font-size: 0.8rem;
    margin-right: 0.5rem;
    margin-bottom: 0.5rem;
    text-decoration: none;
    transition: background-color 0.3s ease;
  }
  .tag:hover {
    background-color: var(--primary-hover);
  }

  .post-footer {
    margin-top: 3rem;
    padding-top: 2rem;
    border-top: 1px solid var(--medium-gray);
    text-align: center;
  }
  .back-to-blog-link {
    color: var(--primary-color);
    text-decoration: none;
    font-weight: 500;
  }
  .back-to-blog-link:hover {
    text-decoration: underline;
    color: var(--primary-hover);
  }
</style>
