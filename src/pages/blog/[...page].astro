---
// src/pages/blog/[...page].astro
import { getCollection, type CollectionEntry } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro'; 
import BlogCard from '../../components/BlogCard.astro';   
import Pagination from '../../components/Pagination.astro'; 
import type { Page, PaginateFunction, GetStaticPathsResult } from 'astro';

interface PaginatedBlogRouteProps {
  page: Page<CollectionEntry<'blog'>>;
}
type PaginateResultItem = {
  params: { page: string | undefined }; 
  props: PaginatedBlogRouteProps;
};

export async function getStaticPaths({ paginate }: { paginate: PaginateFunction }) {
  const allBlogPosts = await getCollection('blog', (entry: CollectionEntry<'blog'>) => {
    return entry.data.isDraft !== true; 
  });
  const sortedPosts = allBlogPosts.sort((a: CollectionEntry<'blog'>, b: CollectionEntry<'blog'>) => {
    const dateA = a.data.publishDate ? new Date(a.data.publishDate).valueOf() : 0;
    const dateB = b.data.publishDate ? new Date(b.data.publishDate).valueOf() : 0;
    return dateB - dateA;
  });
  
  if (sortedPosts.length === 0) {
    console.warn("[blog/[...page].astro] No publishable blog posts found for pagination.");
  }
  
  const paginationResult = paginate(sortedPosts, { pageSize: 6 }); 
  return paginationResult;
}

interface Props {
  page: Page<CollectionEntry<'blog'>>; 
}
const { page } = Astro.props as Props; 

const pageTitle = "Our Blog & Knowledge Base";
const pageDescription = "Explore articles, insights, and updates from Onco Solutions on lighting, automation, and more.";
const pageIntro = "Discover insights, tips, and updates on smart lighting, automation, and innovative solutions from the Onco Solutions team.";

const currentPage = page?.currentPage ?? 1;
const postsToDisplay = page?.data ?? [];
const lastPage = page?.lastPage ?? 1; 
const currentPageBrowserTitle = page && page.currentPage > 1 ? `${pageTitle} - Page ${page.currentPage}` : pageTitle;
---
<BaseLayout title={currentPageBrowserTitle} description={pageDescription}>
  <div class="blog-index-page-container"> {/* Changed class name */}
    
    {/* MODIFIED: Using consistent page header section style */}
    <header class="page-header-section">
      <div class="container">
        {/* The h1 no longer needs an inner span if ::after is on .page-main-title */}
        <h1 class="page-main-title">{pageTitle}</h1> 
        {currentPage === 1 && pageIntro && <p class="page-intro-p">{pageIntro}</p>}
      </div>
    </header>

    <div class="container blog-main-content">
      {postsToDisplay.length > 0 ? (
        <div class="blog-posts-grid">
          {postsToDisplay.map((post: CollectionEntry<'blog'>) => (
            <BlogCard post={post} />
          ))}
        </div>
      ) : (
        <p class="no-posts-message">No blog posts found. Check back soon!</p>
      )}

      {page && lastPage > 1 && <Pagination page={page} base="/blog" />}
    </div>
  </div>
</BaseLayout>

<style>
  /* Common Page Header Style - Ensure this matches projects page or is global */
  .page-header-section {
    background: linear-gradient(135deg, var(--dark-blue) 0%, var(--primary-color) 100%);
    color: var(--text-light);
    padding: 3rem 1rem 2.5rem;
    text-align: center;
    margin-bottom: 2.5rem; 
  }

  .page-header-section .page-main-title {
    color: var(--text-light);
    font-size: 2.8rem; 
    font-weight: 700;
    margin-bottom: 0.75rem;
    display: inline-block; /* To allow underline to span just the text */
    position: relative;
    padding-bottom: 0.5rem; 
  }
  .page-header-section .page-main-title::after { 
    content: '';
    position: absolute;
    bottom: -8px; /* Adjust position of underline */
    left: 50%;
    transform: translateX(-50%);
    width: 70px;
    height: 4px;
    background-color: var(--gold-color); /* Using gold for accent */
  }

  .page-header-section .page-intro-p { 
    font-size: 1.1rem;
    opacity: 0.9;
    max-width: 650px;
    margin: 1rem auto 0 auto; 
    line-height: 1.6;
    color: var(--text-light); 
  }
  /* End Common Page Header Style */

  .blog-index-page-container {
    /* padding-top: 2rem; /* This might be redundant if header has padding */
    padding-bottom: 2rem;
    box-sizing: border-box; 
  }
  /* .blog-header class was removed, styles merged into .page-header-section */

  .blog-main-content.container {
    padding-top: 1rem; /* Space below header/filter bar */
    padding-bottom: 2rem;
  }

  .blog-posts-grid {
    display: grid;
    grid-template-columns: 1fr; 
    gap: 2rem; 
    margin-bottom: 2.5rem; /* Space before pagination */
  }

  @media (min-width: 640px) { 
    .blog-posts-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }
  @media (min-width: 992px) { 
    .blog-posts-grid {
      grid-template-columns: repeat(3, 1fr); 
    }
  }
  .no-posts-message {
    text-align: center;
    font-size: 1.1rem;
    color: var(--secondary-color);
    padding: 2rem 0;
  }
</style>
