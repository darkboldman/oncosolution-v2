---
// src/pages/contact.astro
import BaseLayout from "../layouts/BaseLayout.astro"; 

const pageTitle = "Contact Us";
const pageIntro = "We're here to help and answer any question you might have. We look forward to hearing from you.";

// Replace with your actual Google Maps Embed URL
const googleMapsEmbedUrl = "https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d1734.5383371097093!2d80.0447154661884!3d6.898453760239047!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3ae25360c886bbc5%3A0x4e6d0024f152e774!2sOnco%20Solutions!5e0!3m2!1sen!2sau!4v1748145044204!5m2!1sen!2sau"; // EXAMPLE URL
const yourWhatsAppNumber = "+94773285033"; // Your WhatsApp number from the existing link
---
<BaseLayout title={`${pageTitle} | Onco`} description="Get in touch with Onco Solutions for lighting and automation expertise. Find our address, phone, email, and send us a message.">
  
  <header class="page-header-section">
    <div class="container">
      <h1 class="page-main-title">{pageTitle}</h1>
      {pageIntro && <p class="page-intro-p">{pageIntro}</p>}
    </div>
  </header>

  <div class="contact-page-content-area">
    <div class="container">
      <div class="contact-content-wrapper">
        <div class="contact-info-column">
          <div class="info-block">
            <h2 class="info-title">Address</h2>
            <address>
              B5/GF/1<br />
              GHS<br />
              JALTHARA<br />
              HANWELLA 10650<br />
              SRI LANKA
            </address>
          </div>
          
          <div class="info-block">
            <h2 class="info-title">Phone</h2>
            <p>Tel: <a href="tel:+94114330388">+94 114 330 388</a></p>
            <p>Hot: <a href={`tel:${yourWhatsAppNumber}`}>{yourWhatsAppNumber}</a></p>
            <p class="whatsapp-info">
              <a href={`https://wa.me/${yourWhatsAppNumber.replace('+', '')}`} target="_blank" class="whatsapp-link" aria-label="Chat on WhatsApp">
                <img src="/images/logo/whatsapp.svg" alt="WhatsApp Icon" class="whatsapp-icon" />
                <span>Chat on WhatsApp</span>
              </a>
            </p>
          </div>
          
          <div class="info-block">
            <h2 class="info-title">Email</h2>
            <p><a href="mailto:sales@onco.lk">sales@onco.lk</a></p>
            <p><a href="mailto:info@onco.lk">info@onco.lk</a></p>
          </div>
        </div>
        
        <div class="contact-form-column">
          <h2 class="form-title">Send us a message</h2>
          {/* This form will still use mailto: for the primary submit button */}
          <form id="contactForm" class="contact-form" action="mailto:info@onco.lk" method="post" enctype="text/plain">
            <div class="form-group">
              <label for="name">Name</label>
              <input type="text" id="name" name="name" required aria-describedby="name-error" />
              <div id="name-error" class="error-message" role="alert" aria-live="polite"></div>
            </div>
            
            <div class="form-group">
              <label for="email">Email</label>
              <input type="email" id="email" name="email" required aria-describedby="email-error" />
              <div id="email-error" class="error-message" role="alert" aria-live="polite"></div>
            </div>
            
            <div class="form-group">
              <label for="subject">Subject</label>
              <input type="text" id="subject" name="subject" required aria-describedby="subject-error" />
              <div id="subject-error" class="error-message" role="alert" aria-live="polite"></div>
            </div>
            
            <div class="form-group">
              <label for="message">Message</label>
              <textarea id="message" name="message" rows="5" required aria-describedby="message-error"></textarea>
              <div id="message-error" class="error-message" role="alert" aria-live="polite"></div>
            </div>
            
            <div class="form-actions">
              <button type="submit" class="submit-btn" aria-describedby="submit-status">Send Email</button>
              <button type="button" id="sendViaWhatsAppBtn" class="whatsapp-submit-btn" aria-describedby="whatsapp-status">
                <img src="/images/logo/whatsapp.svg" alt="WhatsApp Icon" class="whatsapp-icon" />
                <span class="button-text">Send via WhatsApp</span>
              </button>
            </div>
            
            <div id="form-status" class="form-status" role="status" aria-live="polite"></div>
          </form>
        </div>
      </div>
      
      <div class="map-section">
        <h2 class="map-title">Our Location</h2>
        <div class="map-iframe-wrapper">
          <iframe 
            src={googleMapsEmbedUrl}
            width="100%" 
            height="400" 
            style="border:0;" 
            allowfullscreen="" 
            loading="lazy" 
            referrerpolicy="no-referrer-when-downgrade"
            title="Our Location on Google Maps">
          </iframe>
        </div>
      </div>
    </div>
  </div>
</BaseLayout>

<style>
  /* ... (Your existing styles for page-header-section, etc. remain the same) ... */
  .page-header-section {
    background: linear-gradient(135deg, var(--dark-blue) 0%, var(--primary-color) 100%);
    color: var(--text-light);
    padding: 3rem 1rem 2.5rem;
    text-align: center;
    margin-bottom: 2.5rem; 
  }

  .page-header-section .page-main-title {
    color: var(--text-light);
    font-size: 2.8rem; 
    font-weight: 700;
    margin-bottom: 0.75rem;
    display: inline-block; 
    position: relative;
    padding-bottom: 0.5rem; 
  }
  .page-header-section .page-main-title::after { 
    content: '';
    position: absolute;
    bottom: -8px; 
    left: 50%;
    transform: translateX(-50%);
    width: 70px;
    height: 4px;
    background-color: var(--gold-color); 
  }

  .page-header-section .page-intro-p { 
    font-size: 1.1rem;
    opacity: 0.9;
    max-width: 650px;
    margin: 1rem auto 0 auto; 
    line-height: 1.6;
    color: var(--text-light); 
  }

  .contact-page-content-area .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem; 
    color: var(--text-color);
  }
  
  .contact-content-wrapper {
    display: grid;
    grid-template-columns: 1fr; 
    gap: 2.5rem;
    margin-bottom: 3rem;
  }

  @media (min-width: 768px) {
    .contact-content-wrapper {
      grid-template-columns: 1fr 1.5fr; 
      gap: 3rem;
    }
  }
  
  .info-block {
    margin-bottom: 2rem;
    padding: 1.5rem;
    background-color: var(--light-gray); 
    border-radius: var(--border-radius, 8px);
    box-shadow: 0 2px 8px rgba(0,0,0,0.05);
  }
  .info-block:last-child {
    margin-bottom: 0;
  }
  
  .info-title, .form-title, .map-title {
    font-size: 1.6rem;
    margin-bottom: 1rem;
    color: var(--dark-blue);
    font-weight: 600;
    padding-bottom: 0.5rem;
    border-bottom: 2px solid var(--primary-color);
    display: inline-block; 
  }
  
  address {
    font-style: normal;
    line-height: 1.7;
    color: var(--secondary-color);
  }
  
  .contact-info-column p {
    line-height: 1.7;
    color: var(--text-color);
    margin-bottom: 0.5rem;
  }
  .contact-info-column a {
    color: var(--primary-color);
    text-decoration: none;
    transition: color 0.3s ease;
  }
  .contact-info-column a:hover {
    color: var(--primary-hover);
    text-decoration: underline;
  }

  .whatsapp-info {
    margin-top: 1rem;
  }
  .whatsapp-link {
    display: inline-flex;
    align-items: center;
    padding: 0.5rem 1rem;
    background-color: #25D366; 
    color: white !important; 
    border-radius: var(--border-radius, 25px);
    text-decoration: none !important;
    font-weight: 500;
    transition: background-color 0.3s ease;
  }
  .whatsapp-link:hover {
    background-color: #1DA851; 
    color: white !important;
  }
  .whatsapp-icon {
    width: 20px;
    height: 20px;
    margin-right: 0.5rem;
    vertical-align: middle;
  }
  
  .contact-form {
    background-color: var(--light-bg);
    padding: 2rem;
    border-radius: var(--border-radius, 8px);
    box-shadow: 0 4px 12px rgba(0,0,0,0.08); /* Use global shadow or define --box-shadow */
  }
  
  .form-group {
    margin-bottom: 1.5rem;
  }
  
  .form-group label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 500;
    color: var(--text-color);
  }
  
  .form-group input[type="text"],
  .form-group input[type="email"],
  .form-group textarea {
    width: 100%;
    padding: 0.85rem;
    border: 1px solid var(--medium-gray);
    border-radius: var(--border-radius, 4px);
    font-family: inherit;
    font-size: 1rem;
    background-color: #fff; 
    color: var(--text-color);
    box-sizing: border-box; 
    transition: border-color 0.3s ease, box-shadow 0.3s ease;
  }
  .form-group input[type="text"]:focus,
  .form-group input[type="email"]:focus,
  .form-group textarea:focus {
    border-color: var(--primary-color);
    outline: none;
    /* Using primary-color-rgb from global.css, ensure it's defined (e.g., --primary-color-rgb: 41, 164, 240;) */
    box-shadow: 0 0 0 2px rgba(var(--primary-color-rgb, 41, 164, 240), 0.2); 
  }

  /* Error state styles */
  .form-group input.error,
  .form-group textarea.error {
    border-color: #dc3545;
    box-shadow: 0 0 0 2px rgba(220, 53, 69, 0.2);
  }
  
  .form-group textarea {
    resize: vertical;
    min-height: 120px;
  }

  /* Error messages */
  .error-message {
    color: #dc3545;
    font-size: 0.875rem;
    margin-top: 0.25rem;
    display: none;
  }
  .error-message.show {
    display: block;
  }

  /* Form status messages */
  .form-status {
    margin-top: 1rem;
    padding: 0.75rem;
    border-radius: var(--border-radius, 4px);
    font-size: 0.9rem;
    display: none;
  }
  .form-status.show {
    display: block;
  }
  .form-status.success {
    background-color: #d4edda;
    color: #155724;
    border: 1px solid #c3e6cb;
  }
  .form-status.error {
    background-color: #f8d7da;
    color: #721c24;
    border: 1px solid #f5c6cb;
  }
  .form-status.info {
    background-color: #d1ecf1;
    color: #0c5460;
    border: 1px solid #bee5eb;
  }

  /* Styles for form actions and WhatsApp submit button */
  .form-actions {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap; /* Allow buttons to wrap on smaller screens */
  }

  .submit-btn, .whatsapp-submit-btn {
    background-color: var(--primary-color);
    color: var(--text-light);
    border: none;
    padding: 0.85rem 1.75rem;
    font-size: 1rem;
    font-weight: 600;
    border-radius: var(--border-radius, 4px);
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.2s ease, opacity 0.3s ease;
    text-transform: uppercase;
    display: inline-flex; /* For icon alignment */
    align-items: center;
    gap: 0.5rem;
    position: relative;
    overflow: hidden;
  }
  
  .submit-btn:hover:not(:disabled) {
    background-color: var(--primary-hover);
    transform: translateY(-2px);
  }

  .whatsapp-submit-btn {
    background-color: #25D366; /* WhatsApp Green */
  }
  .whatsapp-submit-btn:hover:not(:disabled) {
    background-color: #1DA851; /* Darker WhatsApp Green */
    transform: translateY(-2px);
  }
  .whatsapp-submit-btn .whatsapp-icon {
    width: 18px; /* Slightly smaller for button */
    height: 18px;
    /* margin-right is handled by gap */
  }

  /* Loading state */
  .submit-btn:disabled,
  .whatsapp-submit-btn:disabled {
    opacity: 0.7;
    cursor: not-allowed;
    transform: none;
  }

  /* Loading spinner */
  .loading-spinner {
    width: 16px;
    height: 16px;
    border: 2px solid transparent;
    border-top: 2px solid currentColor;
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
  
  .map-section {
    width: 100%;
    margin-top: 2rem;
    padding: 1.5rem;
    background-color: var(--light-gray);
    border-radius: var(--border-radius, 8px);
    box-sizing: border-box;
  }
  .map-iframe-wrapper { 
    position: relative;
    width: 100%;
    padding-bottom: 56.25%; 
    height: 0;
    overflow: hidden;
    border-radius: var(--border-radius, 8px); 
  }
  .map-iframe-wrapper iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: 0; 
  }
  
  @media (max-width: 767px) { 
    .page-header-section .page-main-title {
      font-size: 2.2rem; 
    }
    .page-header-section .page-intro-p {
      font-size: 1rem;
    }
    .info-title, .form-title, .map-title {
      font-size: 1.4rem;
    }
    .contact-form {
      padding: 1.5rem;
    }
    .map-section {
      padding: 1rem; 
    }
    .form-actions {
      flex-direction: column; /* Stack buttons on small screens */
    }
    .submit-btn, .whatsapp-submit-btn {
      width: 100%; /* Make buttons full width on small screens */
      justify-content: center;
    }
  }
</style>

<script define:vars={{ yourWhatsAppNumber }}>
  document.addEventListener('DOMContentLoaded', () => {
    const contactForm = document.getElementById('contactForm');
    const sendViaWhatsAppBtn = document.getElementById('sendViaWhatsAppBtn');
    const formStatus = document.getElementById('form-status');
    
    // --- Helper function for showing error messages ---
    function showFieldError(fieldId, message) {
      const field = document.getElementById(fieldId);
      const errorElement = document.getElementById(`${fieldId}-error`);
      
      if (field && errorElement) {
        field.classList.add('error');
        errorElement.textContent = message;
        errorElement.classList.add('show');
      }
    }

    function clearFieldError(fieldId) {
      const field = document.getElementById(fieldId);
      const errorElement = document.getElementById(`${fieldId}-error`);
      
      if (field && errorElement) {
        field.classList.remove('error');
        errorElement.textContent = '';
        errorElement.classList.remove('show');
      }
    }

    function clearAllErrors() {
      const fieldIds = ['name', 'email', 'subject', 'message'];
      fieldIds.forEach(clearFieldError);
    }

    function showFormStatus(message, type) {
      if (formStatus) {
        formStatus.textContent = message;
        formStatus.className = `form-status show ${type}`;
        
        // Auto-hide success and info messages after 5 seconds
        if (type === 'success' || type === 'info') {
          setTimeout(() => {
            formStatus.classList.remove('show');
          }, 5000);
        }
      }
    }

    function hideFormStatus() {
      if (formStatus) {
        formStatus.classList.remove('show');
      }
    }
    
    // --- Enhanced validation function ---
    function validateFormFields() {
      clearAllErrors();
      hideFormStatus();
      
      const nameInput = document.getElementById('name');
      const emailInput = document.getElementById('email');
      const subjectInput = document.getElementById('subject');
      const messageInput = document.getElementById('message');
      
      if (!nameInput || !emailInput || !subjectInput || !messageInput) {
        console.error('Form elements not found for validation.');
        showFormStatus('Form validation error. Please refresh the page and try again.', 'error');
        return { isValid: false, data: null, firstInvalidField: null };
      }
      
      const name = nameInput.value.trim();
      const email = emailInput.value.trim();
      const subject = subjectInput.value.trim();
      const message = messageInput.value.trim();
      
      let isValid = true;
      let firstInvalidField = null;

      // Validate name
      if (!name) {
        showFieldError('name', 'Name is required.');
        isValid = false;
        if (!firstInvalidField) firstInvalidField = nameInput;
      } else if (name.length < 2) {
        showFieldError('name', 'Name must be at least 2 characters long.');
        isValid = false;
        if (!firstInvalidField) firstInvalidField = nameInput;
      }

      // Validate email
      if (!email) {
        showFieldError('email', 'Email is required.');
        isValid = false;
        if (!firstInvalidField) firstInvalidField = emailInput;
      } else {
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(email)) {
          showFieldError('email', 'Please enter a valid email address.');
          isValid = false;
          if (!firstInvalidField) firstInvalidField = emailInput;
        }
      }

      // Validate subject
      if (!subject) {
        showFieldError('subject', 'Subject is required.');
        isValid = false;
        if (!firstInvalidField) firstInvalidField = subjectInput;
      } else if (subject.length < 3) {
        showFieldError('subject', 'Subject must be at least 3 characters long.');
        isValid = false;
        if (!firstInvalidField) firstInvalidField = subjectInput;
      }

      // Validate message
      if (!message) {
        showFieldError('message', 'Message is required.');
        isValid = false;
        if (!firstInvalidField) firstInvalidField = messageInput;
      } else if (message.length < 10) {
        showFieldError('message', 'Message must be at least 10 characters long.');
        isValid = false;
        if (!firstInvalidField) firstInvalidField = messageInput;
      }
      
      return { 
        isValid, 
        data: { name, email, subject, message }, 
        firstInvalidField 
      };
    }

    // Add real-time validation
    const fields = ['name', 'email', 'subject', 'message'];
    fields.forEach(fieldId => {
      const field = document.getElementById(fieldId);
      if (field) {
        field.addEventListener('blur', () => validateFormFields());
        field.addEventListener('input', () => {
          // Clear error on input if field was previously invalid
          const errorElement = document.getElementById(`${fieldId}-error`);
          if (errorElement && errorElement.classList.contains('show')) {
            clearFieldError(fieldId);
          }
        });
      }
    });

    // --- Enhanced mailto: form submission ---
    if (contactForm) {
      contactForm.addEventListener('submit', function(e) {
        try {
          const validationResult = validateFormFields();
          if (!validationResult.isValid) {
            e.preventDefault();
            showFormStatus('Please correct the errors above and try again.', 'error');
            if (validationResult.firstInvalidField) {
              validationResult.firstInvalidField.focus();
            }
            return;
          }
          
          // If valid, show info message about mailto
          showFormStatus('Opening your email client...', 'info');
        } catch (error) {
          e.preventDefault();
          console.error('Form submission error:', error);
          showFormStatus('An error occurred. Please try again or use the WhatsApp option.', 'error');
        }
      });
    }

    // --- Enhanced WhatsApp button functionality ---
    if (sendViaWhatsAppBtn) {
      sendViaWhatsAppBtn.addEventListener('click', function() {
        try {
          const validationResult = validateFormFields();
          
          if (!validationResult.isValid) {
            showFormStatus('Please correct the errors above before sending via WhatsApp.', 'error');
            if (validationResult.firstInvalidField) {
              validationResult.firstInvalidField.focus();
            }
            return;
          }

          // Show loading state
          const buttonText = sendViaWhatsAppBtn.querySelector('.button-text');
          const originalText = buttonText ? buttonText.textContent : 'Send via WhatsApp';
          
          sendViaWhatsAppBtn.disabled = true;
          if (buttonText) {
            buttonText.innerHTML = '<span class="loading-spinner"></span> Opening WhatsApp...';
          }

          const { name, email, subject, message } = validationResult.data;
          
          let prefilledMessage = `Hi Onco Solutions,\n\n`;
          prefilledMessage += `Name: ${name}\n`;
          prefilledMessage += `Email: ${email}\n`;
          prefilledMessage += `Subject: ${subject}\n\n`;
          prefilledMessage += `Message:\n${message}\n\n`;
          prefilledMessage += `Sent from your website contact form.`;

          const whatsappUrl = `https://wa.me/${yourWhatsAppNumber.replace('+', '')}?text=${encodeURIComponent(prefilledMessage)}`;
          
          // Open WhatsApp
          const whatsappWindow = window.open(whatsappUrl, '_blank');
          
          if (whatsappWindow) {
            // Reset form after successful WhatsApp opening
            if (contactForm) {
              contactForm.reset();
            }
            clearAllErrors();
            showFormStatus('WhatsApp opened successfully! Your form has been cleared.', 'success');
          } else {
            showFormStatus('Please allow popups to open WhatsApp, or copy the message manually.', 'error');
          }

          // Reset button state
          setTimeout(() => {
            sendViaWhatsAppBtn.disabled = false;
            if (buttonText) {
              buttonText.innerHTML = originalText || 'Send via WhatsApp';
            }
          }, 2000);
          
        } catch (error) {
          console.error('WhatsApp submission error:', error);
          showFormStatus('An error occurred while opening WhatsApp. Please try again.', 'error');
          
          // Reset button state on error
          sendViaWhatsAppBtn.disabled = false;
          const buttonText = sendViaWhatsAppBtn.querySelector('.button-text');
          if (buttonText) {
            buttonText.textContent = 'Send via WhatsApp';
          }
        }
      });
    }
  });
</script>